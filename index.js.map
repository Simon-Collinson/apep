{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["require(\"babel-polyfill\");\n\nconst randomInt = (min, max, r) =>\n    Math.floor(r() * (max - min)) + min;\n\n/**\n    Walker's alias method for random objects with different probabilities.\n    http://code.activestate.com/recipes/576564-walkers-alias-method-for-random-objects-with-diffe/\n*/\nconst buildWalkerTable = exports.random = (weightMap) => {\n    const n = weightMap.length;\n    const sum = weightMap.reduce((p, c) => p + c[0], 0);    \n    const weights = weightMap.map((x) => (x[0] * n) / sum);\n\n    const shorts = weights.filter(x => x < 1);\n    const longs =  weights.filter(x => x > 1);\n    const inx = (Array.from(Array(n))).map(_ => -1);\n    while (shorts.length && longs.length) {\n        const j = shorts.pop();\n        const k = longs[longs.length - 1];\n        inx[j] = k;\n        weights[k] -= (1 - weights[j]);\n        if (weights[k] < 1) {\n            shorts.push(k);\n            longs.pop();\n        }\n    }\n\n    return (r) => {\n        const u = r();\n        const j = randomInt(0, n, r);\n        const k = (u <= weights[j] ? j : inx[j]);\n        console.log(k, weightMap[k]);\n        return weightMap[k][1];\n    };\n};\n\n/**\n    Pac\n*/\nconst Pair = (x, s) => ({\n    'x': x,\n    's': s\n});\n\n/**\n*/\nexport const execute = function*(p, s, r) {\n    return yield* p()(s, r);\n};\n\n/**\n    Declare a generator for self reference or for forward references.\n    \n    @param def Function that takes a reference to generator being defined and\n        returns the generator's definition.\n*/\nexport const declare = (def) =>\n    function* self(s, r) {\n        yield* execute(def(self), s, r);\n    };\n\n/**\n    Generate a literal value without any transformations applied\n*/\nexport const lit = (x) => () =>\n    function*(s, _) {\n        const v = Pair(x, s);\n        yield v;\n        return v;\n    };\n \n/**\n    Generate a literal string value. Attempts to convert the input value to \n    a string.\n*/\nexport const str = function(x) {\n    return lit('' + (arguments.length === 0 ? '' : x));\n};\n\n/**\n    Ensure value is inside a generator.\n    \n    Convert any literals into string literals.\n*/\nexport const wrap = (x) =>\n    typeof x === 'function' ? x : str(x);\n\n/**\n*/\nexport const next = (a, b) => {\n    a = wrap(a);\n    b = wrap(b);\n    return () => function*(s1, r)  {\n        const {s} = yield* execute(a, s1, r);\n        return yield* execute(b, s, r);\n    };\n};\n\n/**\n*/\nexport const seq = (...elements) =>\n    elements.map(wrap).reduceRight((p, c) => next(c, p));\n\n/**\n*/\nexport const map = (p, f) => () =>\n    function*(s1, r) {\n        let s = s1;\n        for (let v of execute(p, s, r)) {\n            s = v.s\n            yield Pair(f(v.x), s);\n        }\n    };\n\n/**\n    Choose from along one or more generators, each with its own custom weight.\n*/\nexport const weightedChoice = (weightMap) => {\n    const walker = buildWalkerTable(weightMap);\n    return () => function*(s, r) {\n        const selected = walker(r);\n        return yield* execute(selected, s, r);\n    };\n};\n\n/**\n     Choose from along one or more generators, each with the same weight.\n*/\nexport const choice = (...elements) =>\n    weightedChoice(elements.map((x, i) => [1, x]));\n\n/**\n*/\nexport const exec = function*(p, ud, r = Math.random) {\n    yield* execute(p, { data: ud }, r);\n};\n\n/**\n*/\nexport const run = function*(p, ud, r = Math.random) {\n    for (let x of exec(p, ud, r))\n        yield x.x;\n};\n\n\n    \n "],"sourceRoot":"/source/"}